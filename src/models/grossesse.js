const mongoose = require("mongoose");

const GrossesseSchema = new mongoose.Schema({
  patient: { type: String  },
  enCours: { type: Boolean, default: true },
  nomConjoint: { type: String , maxlength:128 },
  prenomConjoint: { type: String , maxlength:128 },
  dnConjoint: { type: Date },
  telConjoint: { type: String , maxlength:128 },
  groupeSanguinConjoint: { type: String , maxlength:128 },
  consanguiniteConjoint: { type: String , maxlength:128 },
  etatSanteConjoint: { type: String , maxlength:128 },
  poidsAvantGrossesse: { type: Number },
  taille: { type: Number },
  ddr: { type: Date },
  ddrCorrige: { type: Date },
  ddgCorrige: { type: Date },
  cycle: { type: Number, min: 1, max: 45 },
  nbfoetus: { type: Number },
  typeGrossesse: { type: String , maxlength:128 },
  typeGrossesseV2: { type: String , maxlength:128 },
  conception: { type: String , maxlength:128 },
  conceptionV2: { type: String , maxlength:128 },
  dateEcho: { type: Date },
  lcc1: { type: Number },
  lcc2: { type: Number },
  lcc3: { type: Number },
  cn1: { type: Number },
  cn2: { type: Number },
  cn3: { type: Number },
  scoreHerman1: { type: Number },
  scoreHerman1V2: { type: String , maxlength:128 },
  scoreHerman2: { type: Number },
  scoreHerman2V2: { type: String , maxlength:128 },
  scoreHerman3: { type: Number },
  scoreHerman3V2: { type: String , maxlength:128 },
  testT21Fait: { type: Boolean },
  risque: { type: String , maxlength:128 },
  risqueT21Age: { type: Number },
  risqueT21Bio: { type: Number },
  risqueT1813: { type: Number },
  msres1Type: { type: String , maxlength:128 },
  msres1TypeV2: { type: String , maxlength:128 },
  msres1Val: { type: Number },
  msres1Mom: { type: Number },
  msres2Type: { type: String , maxlength:128 },
  msres2TypeV2: { type: String , maxlength:128 },
  msres2Val: { type: Number },
  msres2Mom: { type: Number },
  screeningPremierTrimestre: { type: String , maxlength:128 },
  screeningDeuxiemeTrimestre: { type: String , maxlength:128 },
  caryotypeType: { type: String , maxlength:128 },
  caryotypeVal: { type: String , maxlength:128 },
  dpni: { type: String , maxlength:128 },
  dpniComment: { type: String , maxlength:128 },
  diabete: { type: String , maxlength:128 },
  diabeteV2: { type: String , maxlength:128 },
  tabac: { type: String , maxlength:128 },
  listeria: { type: String , maxlength:128 },
  toxoplasmose: { type: String , maxlength:128 },
  toxoplasmoseV2: { type: String , maxlength:128 },
  cmv: { type: String , maxlength:128 },
  alcool: { type: String , maxlength:128 },
  epp: { type: String , maxlength:128 },
  ppo: { type: String , maxlength:128 },
  adp: { type: String , maxlength:128 },
  allaitementMaternel: { type: String , maxlength:128 },
  allaitementArtificiel: { type: String , maxlength:128 },
  aspegic: { type: String , maxlength:128 },
  infosComplementaires: { type: String , maxlength:128 },
  lieuAccouchementPrincipale: { type: String , maxlength:128 },
  lieuAccouchementLibre: { type: String , maxlength:128 },
  notes: { type: String , maxlength:128 },
});

const Grossesse = mongoose.model('Grossesse', GrossesseSchema);

module.exports = Grossesse;